/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;
vertices
(
    (0 0 0)
    (0.1 0 0)
    (0.4 0 0)
    (0.5 0 0)

    (0 0.4 0)
    (0.1 0.4 0)
    (0.4 0.4 0)
    (0.5 0.4 0)

    (0 0.5 0)
    (0.1 0.5 0)
    (0.4 0.5 0)
    (0.5 0.5 0)


    (0 0 0.005)
    (0.1 0 0.005)
    (0.4 0 0.005)
    (0.5 0 0.005)

    (0 0.4 0.005)
    (0.1 0.4 0.005)
    (0.4 0.4 0.005)
    (0.5 0.4 0.005)

    (0 0.5 0.005)
    (0.1 0.5 0.005)
    (0.4 0.5 0.005)
    (0.5 0.5 0.005)

);


blocks
(
    hex (0 1 5 4 12 13 17 16)
    (20 80 1)
    simpleGrading (1 1 1)
    
    hex (1 2 6 5 13 14 18 17)
    solid_area
    (60 80 1) simpleGrading (1 1 1)
    
    hex (2 3 7 6 14 15 19 18)
    solid_area
    (20 80 1) simpleGrading (1 1 1)


    

    hex (4 5 9 8 16 17 21 20)
    (20 20 1) simpleGrading (1 1 1)
    
    hex (5 6 10 9 17 18 22 21)
    (60 20 1) simpleGrading (1 1 1)

    hex (6 7 11 10 18 19 23 22)
    (20 20 1) simpleGrading (1 1 1)
);

edges
(
);
boundary
(

    q
    {
        type patch;
        faces
        (
            (2 3 15 14)
        );
    }

    juere
    {
        type patch;
        faces
        (
            (4 0 12 16)
            (8 4 16 20)
            (9 8 20 21)
            (10 9 21 22)
            (11 10 22 23)
            (0 1 13 12)
            (1 2 14 13)

        );
    }

    sym
    {
        type symmetry;
        faces
        (
            (7 11 23 19)
            (3 7 19 15)
        );
    }

    frontAndBack
    {
        type empty;
        faces
        (

	    (12 13 17 16)
	    (13 14 18 17)
	    (14 15 19 18)
	    (16 17 21 20)
	    (17 18 22 21)
	    (18 19 23 22)
	    (0 4 5 1)
	    (1 5 6 2)
	    (2 6 7 3)
	    (4 8 9 5)
	    (5 9 10 6)
	    (6 10 11 7)
        );
    }
);
mergePatchPairs
(
);

// ************************************************************************* //
